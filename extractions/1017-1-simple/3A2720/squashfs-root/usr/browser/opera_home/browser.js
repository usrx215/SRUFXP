// V0xIvJMhl/TgfKQXnKZaStOxOHEfHsuhXUSeOHkuQIDbc9qio3YS1IlZzwBbJPWPZv78dJvXtgMPX7l92KKXGKzDMNAW5uptxstUK4DHxMmlLKjYXqVsZBXve6zl2A6h0mSCx2QmWD2CAGrUtbdvPyCdBd+JHoZ4au57r0CwzglwFvtPYpTdEK6f/oW9pqwd7JRK62n35ALsQBh5P4nBzhylmhDE9SngczG9ytFcz0VKY5JDsk7Le/8KiRkc5iDxu3PFHmL0/Dp9ZB1MwVjlUQSXjsHXrB739gsaXIFCdgZnw8IBvxQFSHtFtfVDIaWUqXw5J5qfxn7qGgsY9ijp2w==
/**
** Copyright (C) 2000-2012 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.
**
** This script patches sites to work better with Opera
** For more information see http://www.opera.com/docs/browserjs/
**
** If you have comments on these patches (for example if you are the webmaster
** and want to inform us about a fixed site that no longer needs patching) please
** report issues through the bug tracking system
** https://bugs.opera.com/
**
** DO NOT EDIT THIS FILE! It will not be used by Opera if edited.
**/
// Generic fixes (mostly)
(function(opera){
	if(!opera || opera._browserjsran)return;
	opera._browserjsran=true;
	var bjsversion=' Opera Linux SDK 5500 core 2.12.362, November 29, 2012. Active patches: 60 ';
	// variables and utility functions
	var navRestore = {}; // keep original navigator.* values
	var shouldRestore = false;
	var hostname = {
		value:location.hostname, 
		toString:function(){return this.value;},
		valueOf:function(){return this.value;}, 
		indexOf:function(str){return this.value.indexOf(str);},
		match: function(rx){ return this.value.match(rx); },
		contains:function(str){ return this.value.indexOf(str)>-1; },
		endsWith:function(str){ var pos=this.value.indexOf(str);return pos>-1 && this.value.length===pos+str.length; }
	}
	var href = location.href;
	var pathname=location.pathname;
	var fixed = false; // magic fixes need only run once
	if(!opera.postError)opera.postError=function(){}; // handling versions w/o error console
	// Storing function references
	var postError = opera.postError,
	call = Function.prototype.call,
	indexOf=String.prototype.indexOf,
	lastIndexOf=String.prototype.lastIndexOf,
	replace=String.prototype.replace,
	match=String.prototype.match,
	toLowerCase=String.prototype.toLowerCase,
	getAttribute=Element.prototype.getAttribute,
	setAttribute=Element.prototype.setAttribute,
	insertBefore=Node.prototype.insertBefore,
	insertAdjacentHTML=Element.prototype.insertAdjacentHTML,
	defineMagicVariable=opera.defineMagicVariable,
	defineMagicFunction=opera.defineMagicFunction,
	version=opera.version,
	getElementById=Document.prototype.getElementById,
	appendChild=Node.prototype.appendChild,
	removeChild=Node.prototype.removeChild,
	replaceChild=Node.prototype.replaceChild,
	evaluate=Document.prototype.evaluate,
	getElementsByTagName=Document.prototype.getElementsByTagName,
	createElement=Document.prototype.createElement,
	createEvent=Document.prototype.createEvent,
	dispatchEvent=Document.prototype.dispatchEvent,
	initEvent=Event.prototype.initEvent,
	createTextNode=Document.prototype.createTextNode,
	stopPropagation=Event.prototype.stopPropagation,
	preventDefault=Event.prototype.preventDefault,
	getComputedStyle=window.getComputedStyle,
	slice=Array.prototype.slice,
	shift=Array.prototype.shift,
	setTimeout=window.setTimeout,
	removeAttribute=Element.prototype.removeAttribute,
	addEventListener=Document.prototype.addEventListener,
	isNaN=window.isNaN,
	RegExp=window.RegExp,
	unescape=window.unescape,
	func_toString=Function.prototype.toString,
	parseFloat=window.parseFloat,
	random=Math.random;
	var opera_version = parseFloat.call(window,opera.version());
	var tinyMCEVersionInfo={};
	function log(str){if(self==top)postError.call(opera, 'Opera has modified the JavaScript on '+hostname+' ('+str+'). See browser.js for details');}

	// Utility functions

	function addCssToDocument(cssText, doc, mediaType){
		getElementsByTagName.call=addEventListener.call=createElement.call=createTextNode.call=insertBefore.call=setAttribute.call=appendChild.call=version.call=call;
		doc = doc||document;
		mediaType = mediaType||'';
		addCssToDocument.styleObj=addCssToDocument.styleObj||{};
		var styles = addCssToDocument.styleObj[mediaType];
		if(!styles){
			var head = getElementsByTagName.call(doc, "head")[0];
			if( !head ){
				var docEl = getElementsByTagName.call(doc, "html")[0];
				if(!docEl){
					// :S this shouldn't happen - see if document hasn't loaded
					addEventListener.call(doc, opera&&version.call(opera)>=9?'DOMContentLoaded':'load',
					function(){ addCssToDocument(cssText, doc); },false);
					return;
				}
				head = createElement.call(doc, "head");
				if(head) insertBefore.call(docEl, head,docEl.firstChild);
				else head = docEl;
			}
			addCssToDocument.styleObj[mediaType] = styles = createElement.call(doc, "style");
			setAttribute.call(styles, "type","text/css");
			if(mediaType)setAttribute.call(styles, "media", mediaType);
			appendChild.call(styles, createTextNode.call(doc,' '));
			appendChild.call(head, styles)
		}
		styles.firstChild.nodeValue += cssText+"\n";
		return true;
	}

	function addPreprocessHandler( search, replacement, onceonly, conditional ){
		// adding event handler for script pre-processing if required
		var handler=function(e){
			indexOf.call=replace.call=removeEventListener.call=call; /* also needs anything used inside conditional! */
			if( conditional && ! conditional(e.element) ){return;}
			e.element.text=replace.call( e.element.text, search, replacement );
			if(onceonly){
				removeEventListener.call(opera, 'BeforeScript', arguments.callee, false);
			}
		}
		opera.addEventListener('BeforeScript', handler , false);
		return handler;
	}

function avoidDocumentWriteAbuse(contentRegexp){
	var dw=document.write;
	contentRegexp = contentRegexp || /(^<img .*?width=("|)1("|)\s+height=("|)1("|)\s+border=("|)0("|)\s+alt="".*?>$|^\[object Object\]$)/i;
	document.write=function( s ){
		if( String(s).match( contentRegexp ) ){
			log('The s_code patch prevented document.write()');
		}else{
			dw.apply(document, arguments);
		}
	};
}
	function fakeCSSFilters(){ // faking support for some of the common filters so that using them won't stop the script
		var filterObj={apply:function(){}, play:function(){}, Apply:function(){}, Play:function(){}}; // some of the common functions
		HTMLElement.prototype.filters=[ filterObj, filterObj, filterObj ]; // fake three applied filters with play and apply functions
		HTMLElement.prototype.filters['blendTrans']=filterObj; // we also fake a named blendTrans filter
	}

	function fixHVMenu(name){
		if(fixed){return;}fixed=true;
		defineMagicVariable.call=match.call=call;
		// fix by changing Opera from an unsupported browser to a supported browser
		// Set to true either PosStrt, NavYes, DomNav   or   PosStrt, ExpYes, DomExp
		defineMagicVariable.call(opera, 'PosStrt', function(){ return true }, null);
		defineMagicVariable.call(opera, 'NavYes', function(){ return true }, null);
		defineMagicVariable.call(opera, 'DomNav', function(){ return true }, null);
		// if Opera >= 9.5, load events are sent to document and not to body - make sure script doesn't set body.onload
		defineMagicVariable.call(opera, 'Trigger', function(obj){if(obj===document||obj===document.body) return window; return obj; }, null);
		// Tell the script that CSS filters are not supported.
		defineMagicVariable.call(opera, 'Fltr', function(){ return false; }, function(){ return });
		// More recent versions look for 'opera 7' in navigator.userAgent and some do not use the variable names above
		if(  match.call(name, /var\.js$/) || match.call(name, /compact\.js$/) ){
			navRestore['userAgent'] = navigator.userAgent;
			navigator.userAgent+=' opera 7'; 
			shouldRestore = true;
		}
	}
	function fixHierMenus(){
		if(fixed){return;}fixed=true;
		defineMagicVariable.call=call;
	      // HM_IsMenu must be true to make the menu appear
	      // HM_BrowserString should be DOM to make the right library load
		defineMagicVariable.call(opera, 'HM_IsMenu', function(){ return true}, function(){ return true });
		if(!document.all)defineMagicVariable.call(opera, 'HM_IE', function(){ return true}, function(){ return true });
		defineMagicVariable.call(opera, 'HM_BrowserString', function(){ return 'DOM'}, function(){ return 'DOM' });
		if(HTMLBodyElement.prototype.__defineGetter__)HTMLBodyElement.prototype.__defineGetter__('clientHeight', function(){return this.ownerDocument.documentElement.clientHeight;}); // PATCH-33
		defineMagicVariable.call(opera, 'HM_GL_Filter', function(){ return undefined;},null); // PATCH-327
		defineMagicVariable.call(opera, 'HM_Canvas', function(obj){obj.__defineGetter__('clientHeight', function(){return window.innerHeight});return obj;},null); // PATCH-785

	}

function fixIFrameSSIscriptII(funcName, iFrameId){
	if(typeof funcName==='string'&&!arguments.callee[funcName]){
		var overrideFn = function (a,b,frameid){
			frameid = frameid|| iFrameId;
			var currentfr=document.getElementById(frameid);
			if (currentfr){
				try{
					currentfr.height = currentfr.contentDocument.documentElement.scrollHeight;
				}catch(e){}
				currentfr.style.display='block';
				if(!arguments.callee._listenerAdded){
					currentfr.addEventListener("load", function(e){ overrideFn(0,0,e.target.id); }, false);
					arguments.callee._listenerAdded=true;
				}
			}
		}
		opera.defineMagicFunction(funcName, overrideFn);
		fixIFrameSSIscriptII[funcName]=1;//remember that we fixed this already
	}
}
function fixJQueryAutocomplete(){
  addPreprocessHandler(/\.opera\s*\?\s*["']keypress["']\s*:\s*["']keydown["']/g, '.opera && !(\'KeyboardEvent\' in window)?"keypress":"keydown"');
}

function fixLiknoAllWebMenus(ev){
	indexOf.call=match.call=defineMagicVariable.call=postError.call=removeEventListener.call=appendChild.call=createElement.call=preventDefault.call=replace.call=call;
	if(fixed)return; fixed=true;
	if( indexOf.call(ev.element.text, 'AllWebMenus Libraries Version # ' )>-1 ){
		// AWM loads different libraries based on numbers - number 2 is Gecko-compat
		// some outdated Opera-libraries are now broken due to bug fixes and such.
		var awmVersion = parseInt(match.call(ev.element.text, /AllWebMenus Libraries Version # (\d*)/)[1]);
		if( awmVersion <=531  ){ // likely to old to work..
			defineMagicVariable.call(opera,   'scriptNo', function(){return 2}, null);
			defineMagicVariable.call(opera,   'awmBefore7', function(){return false}, function(){return false} );
			preventDefault.call(ev); // don't run this script
			var script = appendChild.call(document.body, createElement.call(document, 'script')); // create another one..
			script.src = replace.call(ev.element.src, /awmlib\d*\.js/, 'awmlib2.js'); // and load a more suitable version
			postError.call(opera, 'Opera has modified the JavaScript on '+hostname+' (AllWebMenus fix). See browser.js for details.');
		}
		removeEventListener.call(opera, 'BeforeScript', arguments.callee, false );
	}
}
	function fixMilonicMenu(name){ 	// gotcha: must be called with script.src as argument
		if(fixed){return;}fixed=true;
		defineMagicVariable.call=defineMagicFunction.call=addEventListener.call=call;
	      // "opera" or "opra" true will cause no menu or garbled (Opera 6 pixel* -  compat)
		defineMagicVariable.call(opera, 'opera', function(){ return false }, function(){});
		defineMagicVariable.call(opera, 'opra', function(){ return false }, function(){});
		// ie55 true will use IFRAME shims
		defineMagicVariable.call(opera, 'ie55', function(){ return false }, function(){ });
		// identifying as Opera will cause "dom" variable to be false in some versions
		defineMagicVariable.call(opera,  'dom' , function(){ return true }, function(){});
		// fixForm function will hide page content
		defineMagicFunction.call(opera,  'fixForm' , function(){});
		// Menu does not work on Mac if it detects platform
		defineMagicVariable.call(opera, 'mac', function(){ return false }, function(){ });
		// Fix units for standards mode, CORE-38601
		defineMagicVariable.call(opera,  '_px' , function(){return 'px';}, null);
		// bug 330958
		if(typeof window.scrollX=='undefined'){
			defineMagicVariable.call(opera, 'scrollY', function(){ return document.body.scrollTop;}, null);
			defineMagicVariable.call(opera, 'scrollX', function(){ return document.body.scrollLeft;}, null);
		}
	}

function fixOpenCube(name){// IMPORTANT gotcha: the fixOpenCube and fixHVMenu functions must be called with an appropriate string argument
	if(fixed)return;
	match.call=addEventListener.call=defineMagicVariable.call=indexOf.call=call;
	// OpenCube menu
	window.vxml = window.vxml||{}; // to fix semi-opera-detection
	//Some versions try to call a function q99 which is only defined in the Opera library
	addEventListener.call(window, 'load', function(){ if(typeof q99=='undefined')window.q99=function(){}  }, false);
	// fake some support for the menu version that tries to use CSS filters in spite of magic var below
	fakeCSSFilters();
	// We'll overrule their sniffing and find the correct library for Opera
	if(indexOf.call(navigator.appVersion, 'Mac')!=-1){
		// They don't seem to like Macs.. see 356184
		navigator.appVersion = replace.call( navigator.appVersion, 'Mac', 'M A C' );
		addEventListener.call(opera, 'AfterExternalScript', function(){
			replace.call = removeEventListener.call = call;
			navigator.appVersion = replace.call( navigator.appVersion, 'M A C', 'Mac' );
			removeEventListener.call(opera, 'AfterExternalScript', arguments.callee, false);
		}, false);
		// some variables are uninitialized
		q20=q21=[];
	}
	if(match.call(name, /dqm_script\d*\.js$/)){
		defineMagicVariable.call(opera, 'brn', function(val){ return 'ie' }, function(val){ return 'ie' });
		defineMagicVariable.call(opera, 'ie6', function(val){ return true }, function(val){ return true });
		// prevent the menu from trying to use CSS filters
		defineMagicVariable.call(opera, 'DQM_sub_menu_effect',  function(){return 'none';}, null);
		if(document.evaluate){ // we have an event transparency problem on some sites, see for example bug 239622
			addEventListener.call(window, 'load', function(){
				var nodes=document.evaluate( '//a/child::img[substring(@id, 0, 4)=\'qmim\']', document.body,null,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null ),node;
				while( node=nodes.iterateNext()){
					node.parentElement.parentElement.replaceChild(node, node.parentElement );
				};
			}, false);
		}
		fixed=true;
		return true;
	}else if(indexOf.call(name, 'dqm_loader.js')>-1){
		defineMagicVariable.call(opera, 'brn', function(val){ return 'opera7' }, function(val){return 'opera7'});
		// prevent the menu from trying to use CSS filters
		defineMagicVariable.call(opera, 'DQM_sub_menu_effect',  function(){return 'none';}, null);
		fixed=true;
		return true;
	}else if(indexOf.call(name, 'dnm_script.js')>-1){ // very old version.. 153257
		defineMagicVariable.call(opera, 'ie5', function(val){ return true }, function(val){ return true });
		defineMagicVariable.call(opera, 'ns5', function(val){ return true }, function(val){ return true });
	}
}

	function fixUDM(name){
		if(fixed){return;}fixed=true;
		defineMagicVariable.call=call;
		// If the menu is a 3.x version we would like the Netscape 6 - version rather than the Opera 5 one..
		defineMagicVariable.call(opera, 'op5',function () { return 0; },null);
		defineMagicVariable.call(opera, 'ns6',function () { return 1; },null);

		// certain versions break if insertRule throws exceptions. Also see bug 242411.
		// Better fake missing support for DOM2Style then..
		defineMagicVariable.call(opera, 'um', function(o){ o.ss=false; o.o7=false; return o; }, null);
    }

function prestoVersionBelow(ver){
	var parts=ver.split(/\./);
	var current=navigator.userAgent.match(/Presto\/(\d+)\.(\d+)\.(\d+)/);
	if(!current)return true;
	for( var i=1;i<current.length;i++ ){
		if( parts[i] != current[i] ){
			return parts[i]<current[i];
		}
	}
	return false; // identical
}
function sendOperaEvent(name, target){
	initEvent.call=createEvent.call=dispatchEvent.call=call;
	var evt=createEvent.call(document, 'Event');
	initEvent.call(evt, name, false, false);
	evt.element=target;
	dispatchEvent.call(opera, evt);
}
function setTinyMCEVersion(e){
	if(tinyMCEVersionInfo.majorVersion)return; // already found it
	indexOf.call=match.call=call;
	// look at source code
	if( e && indexOf.call(e.element.text, 'majorVersion' )>-1  ){
		if(match.call(e.element.text, /majorVersion\s*[:=]+\s*["']?(\d)/)){ tinyMCEVersionInfo.majorVersion=RegExp.$1; }
		if(match.call(e.element.text, /minorVersion\s*[:=]+\s*["']?(\d(\.\d|))/)){ tinyMCEVersionInfo.minorVersion=RegExp.$1; }
	}
	// if an instance has already been created, we can read version info from it...
	var tinyInstance='tinyMCE' in window?window.tinyMCE : 'tinymce' in window ? window.tinymce : 'tiny_mce' in window ?  window.tiny_mce : null;
	if(tinyInstance&&tinyInstance.majorVersion)tinyMCEVersionInfo={ majorVersion:tinyInstance.majorVersion, minorVersion:tinyInstance.minorVersion };
}





	// PATCH-837, HTMLMediaElement leanback shim, build 5500 addition (was ci374)
// 0, Generic JS library patches
// PATCH-452, Validate result from document.all.item
// PATCH-261, Hide broken implementation of showModalDialog to make object detection reliable
// PATCH-837, HTMLMediaElement leanback shim
// PATCH-298, Disable sniffing in old HTMLArea editors
// PATCH-138, Asia-region Generic Patches

	if (!window.URL){
		window.URL = {
			createObjectURL: function(x) {
				return x;
			}
		};
	}

	// Use an event listener to detect specific scripts
	opera.addEventListener( 'BeforeExternalScript', function(ev){
		match.call=replace.call=indexOf.call=toLowerCase.call=addEventListener.call=removeEventListener.call=version.call=parseFloat.call=defineMagicVariable.call=preventDefault.call=call;
		
		var name=ev.element.src; 
		if( !name ){ return; } // no fixes required for SCRIPT xlink:href so far..
		name=toLowerCase.call(name );// toLowerCase fixes sangjatten.se
		if ( indexOf.call(name, 'dqm_')>-1 || indexOf.call(name, 'dnm_')>-1 || indexOf.call(name, 'cbrowser_opera.js')>-1 ){
			// OpenCube menu
			if(fixOpenCube(name)){
				log('OpenCube fix');
			}
			return;
		}else if(  indexOf.call(name, 'hm_loader')>-1  ){
			// HierMenus menu
			// If we apply this fix to version 6.x the menu breaks.
			// HM support recommends checking that HM_BrowserVersion is not defined
			addEventListener.call(opera, 'BeforeScript', function(ev){ 
				match.call=removeEventListener.call=call;
				if( ev.element.text && ! match.call(ev.element.text, /hm_browserversion/i) ){
					fixHierMenus(name);
					log('HierMenus fix');
				}
				removeEventListener.call(opera, 'BeforeScript', arguments.callee, false);
			}, false);
			return;
		}else if(  indexOf.call(name, 'mmenu')>-1 || indexOf.call(name, 'milonic')>-1  ){
			// Milonic menu
			fixMilonicMenu(name);
			log('Milonic fix');
			return;
		}else if(  match.call(name, /menu(\d*_(script|com|build|var|program|compact|animation)|e)\.js$/)  ){
			// HV menu
			fixHVMenu(name);
			log('HVMenu fix');
			return;
		}else if(  match.call(name, /udm[_-]/)  || (  match.call(name, /(sniffer|control)\.js$/)   )    ){
			if(hostname.indexOf('usatoday.com')>-1)return; // PATCH-465
			// UDM menu
			addEventListener.call(opera, 'BeforeScript', function(ev){
				match.call=call;
				if( match.call(name, /udm[_-]/)  || indexOf.call(ev.element.text, 'UDM')>-1 || indexOf.call(ev.element.text, 'um.ov=um.ov.split(/opera[\\/ ]7./);um.ov=um.pi(um.ov[1].charAt(0));')>-1 ){
					fixUDM(name);
					log('UDM fix');
				}
			}, false);
			return;
		}else if( parseFloat.call(window, version.call())<9.5 && indexOf.call(name, '/novell/webaccess/images/msglist.js')>-1){ // Bug 92454, workaround for NWA
			defineMagicFunction.call(opera, 'fixContentHeight',
				function(oF, oT){
					document.documentElement.clientHeight=window.innerHeight;
					oF.apply(oT, slice.call(arguments, 2));
			});
			log('Novell Height function fix');
		}else if( indexOf.call(name, 'awmlib')>-1 ){
				opera.addEventListener('BeforeScript', fixLiknoAllWebMenus, false);
				log('AllWebMenus fix');
		}else if( indexOf.call(name, 'io-upload-iframe')>-1 ){ // PATCH-697, Moodle / YUI upload
		  addEventListener.call(opera, 'BeforeEventListener.load', function(e){
		    if(e.event.target.id && indexOf.call(e.event.target.id, 'io_iframe')==0){
		      try{if( e.event.target.contentDocument.body.textContent=='' )preventDefault.call(e);}catch(e){}
		    }
		  }, false);
		  log('YUI upload fix');
		}else if( indexOf.call( name, 'tiny_mce' )>-1 && 'designMode' in document && !fixed){
				log('TinyMCE detected. Various fixes applied.');
				addEventListener.call(opera, 'BeforeScript', function(e){
					indexOf.call=removeEventListener.call=call;
					if( indexOf.call(e.element.src, 'tiny_mce'>-1) ){
						setTinyMCEVersion(e);
						sendOperaEvent( 'bjsOnTinyMCEScript', e.element );
					}
				}, false);
				addEventListener.call(opera, 'BeforeEvent.load', function(e){
					match.call=call;
					if( e.event.target.tagName==='IFRAME' && ( match.call(e.event.target.name, /^mce_editor_\d/ ) || match.call(e.event.target.id, /^mce_editor_\d/ ))){
						setTinyMCEVersion();
						sendOperaEvent('bjsOnTinyMCEInstance', e.event.target);
					}
				}, false);
				fixed=true;
		}else if(indexOf.call(name,'s_code')>-1||indexOf.call(name,'omniture')>-1){ //PATCH-59
			avoidDocumentWriteAbuse(); // calls log()
		}else if(indexOf.call(name,'setdomain.js')>-1 || indexOf.call(name,'browserversion.js')>-1){
			navRestore.userAgent = navigator.userAgent;
			navigator.userAgent+=' Gecko';
			shouldRestore=true;
			log('PATCH-128, Sun Webmail set domain fix');
		}else if(indexOf.call(name, '.virtualearth.net/mapcontrol')>-1 && !fixed){
			if(prestoVersionBelow('2.12.356')){// required up to 2.12.356
				addCssToDocument('.MicrosoftMap button:first-child{display:none}');
				fixed=!0;
				log('PATCH-768, MS Virtual Earth workaround applied');
			}
		}else if(!fixed && (indexOf.call(name, 'jquery.autocomplete')>-1 || indexOf.call(name, 'highslide.js')>-1 )){
			fixJQueryAutocomplete();
		}else if(indexOf.call(name,'/wclib.js')>-1){
			addEventListener.call(opera, 'BeforeEventListener.load', function(e){
				var trgt = e.event.target;
				if(trgt.tagName=="IFRAME" && trgt.id && trgt.id.indexOf('wcframable')==0){
					preventDefault.call(e);
				}
			},false);
			log('PATCH-1070 - fix infinite load issue with webcollage script');
		}
		if( typeof window._jive_plain_quote_text!='undefined' ){
			opera.addEventListener('BeforeScript', function(e){
				indexOf.call=removeEventListener=call;
				if(indexOf.call(e.element.text, 'tinymce=')>-1){
					setTinyMCEVersion(e);
					sendOperaEvent( 'bjsOnTinyMCEScript', e.element );
					removeEventListener.call(opera, 'BeforeScript',arguments.callee,false);
				}
			}, false);
			log('PATCH-248, Jive forum embeds TinyMCE, possibly outdated versions');
		}
		// Creating event handler to restore any changed navigator properties
		if( shouldRestore ){
			addEventListener.call(opera, 'AfterExternalScript', 
				function(ev){
					removeEventListener.call=call;
					var prop;
					for(prop in navRestore) navigator[prop]=navRestore[prop];
					removeEventListener.call(opera, 'AfterExternalScript', arguments.callee, false);
				}
			, false);
		}
	}, false);

	try{
	//Credits Makoto Mizukami
	if('all' in document){document.all.item = function(lIndex, iSubindex){
		var i = 0, j = 0,
		byId = document.getElementById(lIndex),
		byName = document.getElementsByName(lIndex),
		retLength = byId === null ? byName.length : byName.length + 1,
		ret = byName.length === 0 ? byId : (retLength === 1 ? byName[0] : new Array(retLength));
		if(byId)return byId;
		if(retLength < 2) return ret;
	
		if(byId !== null){
			ret[0] = byId;
			j = 1;
		}
		for(i = 0; i < byName.length; i += 1){
			if(byName[i].tagName.match(/^(applet|button|form|iframe|input|map|meta|object|param|select|textarea)$/i)){
				ret[j] = byName[i];
				j += 1;
			}
		}
		ret.splice(j);
	
		return iSubindex === undefined ? ret : ret[iSubindex];
	};
	}}catch(e){}

	delete showModalDialog;

		/* Constants. */
		Object.defineProperty(HTMLMediaElement.prototype, 'EOS_NO_ERROR', { value: 0 });
		Object.defineProperty(HTMLMediaElement.prototype, 'EOS_NETWORK_ERR', { value: 1 });
		Object.defineProperty(HTMLMediaElement.prototype, 'EOS_DECODE_ERR', { value: 2 });
		Object.defineProperty(HTMLMediaElement.prototype, 'SOURCE_CLOSED', { value: 0 });
		Object.defineProperty(HTMLMediaElement.prototype, 'SOURCE_OPEN', { value: 1 });
		Object.defineProperty(HTMLMediaElement.prototype, 'SOURCE_ENDED', { value: 2 });
	
		/* Event handler setters. */
		var handleSetter = function(type, handler) {
			this.removeEventListener(type, this['_' + type]);
	
			if (handler && typeof handler == 'function') {
				this.addEventListener(type, handler, false);
				this['_' + type] = handler;
			}
			else
				this['_' + type] = null;
		}
	
		HTMLMediaElement.prototype.__defineSetter__("onsourceopen", function(handler) { handleSetter.call(this, 'sourceopen', handler); });
		HTMLMediaElement.prototype.__defineGetter__("onsourceopen", function() { return this._sourceopen || null; });
		HTMLMediaElement.prototype.__defineSetter__("onsourceended", function(handler) { handleSetter.call(this, 'sourceended', handler); });
		HTMLMediaElement.prototype.__defineGetter__("onsourceended", function() { return this._sourceended || null; });
		HTMLMediaElement.prototype.__defineSetter__("onsourceclose", function(handler) { handleSetter.call(this, 'sourceclose', handler); });
		HTMLMediaElement.prototype.__defineGetter__("onsourceclose", function() { return this._sourceclose || null; });
	
		HTMLMediaElement.prototype.__defineGetter__("mediaSourceURL", function() {
			this._o_ensureMediaSource();
			return URL.createObjectURL(this._o_mediaSource);
		});
	
		HTMLMediaElement.prototype.__defineGetter__("sourceState", function() {
			this._o_ensureMediaSource();
	
			var sourceState = this.SOURCE_CLOSED;
			switch (this._o_mediaSource.readyState) {
			case "closed":
				break;
			case "open":
				sourceState = this.SOURCE_OPEN;
				break;
			case "ended":
				sourceState = this.SOURCE_ENDED;
				break;
			};
	
			return sourceState;
		});
	
		/** Create a media source for this media element, and set up event bridges. */
		HTMLMediaElement.prototype._o_ensureMediaSource = function() {
			if (!this._o_mediaSource) {
				this._o_mediaSource = new MediaSource();
	
				var bridgeEvent = function(name) {
					this._o_mediaSource.addEventListener(name, (function(e) {
						var copy = document.createEvent('Events');
						copy.initEvent(name, false /* bubbles */, false /* cancelable */);
						this.dispatchEvent(copy);
					}).bind(this), false);
				};
	
				bridgeEvent.call(this, 'sourceopen');
				bridgeEvent.call(this, 'sourceended');
				bridgeEvent.call(this, 'sourceclose');
			};
		};
	
		HTMLMediaElement.prototype.sourceAddId = function(id, type) {
			this._o_ensureMediaSource();
	
			// 1. If id is null or an empty string, then throw an INVALID_ACCESS_ERR exception.
			if (id === null || id === "")
				throw CustomDOMException(DOMException.INVALID_ACCESS_ERR);
	
			// 2. If id specifies an ID that has been previously added then throw a INVALID_STATE_ERR
			//	  exception.
			if (this["_o_sourceBuffer_" + id] !== undefined)
				throw CustomDOMException(DOMException.INVALID_STATE_ERR);
	
			// 3. If type is null or an empty [string] then throw an INVALID_ACCESS_ERR exception.
			// 4. If type contains a MIME type that is not supported or contains a MIME type that is not
			//	  supported with the types specified for other sourceIDs, then throw a NOT_SUPPORTED_ERR
			//	  exception.
			// 5. If the user agent can't handle any more IDs then throw a QUOTA_EXCEEDED_ERR exception.
			// 6. If the sourceState attribute is not in the SOURCE_OPEN state then throw an
			//	   INVALID_STATE_ERR exception.
			this["_o_sourceBuffer_" + id] = this._o_mediaSource.addSourceBuffer(type);
		};
	
		HTMLMediaElement.prototype.sourceRemoveId = function(id) {
			this._o_ensureMediaSource();
	
			// 1. If id is null or an empty string, then throw an INVALID_ACCESS_ERR exception.
			if (id === null || id === "")
				throw CustomDOMException(DOMException.INVALID_ACCESS_ERR);
	
			// 2. If the sourceState attribute is in the SOURCE_CLOSED state then throw an
			//	  INVALID_STATE_ERR exception.
			if (this.sourceState === this.SOURCE_CLOSED)
				throw CustomDOMException(DOMException.INVALID_STATE_ERR);
	
			// 3. If id specifies an ID that has not been previously added then abort these steps.
			if (this["_o_sourceBuffer_" + id] === undefined)
				return;
	
			// 4. Remove track information from audioTracks and videoTracks for all tracks associated
			//	  with id and fire a simple event named change on the modified lists.
			// 5. Destroy source buffer resources for id.
			this._o_mediaSource.removeSourceBuffer(this["_o_sourceBuffer_" + id]);
			this["_o_sourceBuffer_" + id] = undefined;
		};
	
		HTMLMediaElement.prototype.sourceBuffered = function(id) {
			this._o_ensureMediaSource();
	
			// 1. If id is null or an empty string, then throw an INVALID_ACCESS_ERR exception.
			if (id === null || id === "")
				throw CustomDOMException(DOMException.INVALID_ACCESS_ERR);
	
			// 2. If id specifies an ID that has not been previously added then throw a
			//	  SYNTAX_ERR exception.
			if (this["_o_sourceBuffer_" + id] === undefined)
				throw CustomDOMException(DOMException.SYNTAX_ERR);
	
			// 3. If the sourceState attribute is in the SOURCE_CLOSED state then throw an
			//	  INVALID_STATE_ERR exception.
			if (this.sourceState === this.SOURCE_CLOSED)
				throw CustomDOMException(DOMException.INVALID_STATE_ERR);
	
			// 4. Return TimeRanges for the source buffer associated with id.
			return this["_o_sourceBuffer_" + id].buffered;
		};
	
		HTMLMediaElement.prototype.sourceAppend = function(id, data) {
			this._o_ensureMediaSource();
	
			// 1. If id is null or an empty string, then throw an INVALID_ACCESS_ERR exception.
			if (id === null || id === "")
				throw CustomDOMException(DOMException.INVALID_ACCESS_ERR);
	
			// 2. If id specifies an ID that has not been previously added then throw a
			//	  SYNTAX_ERR exception.
			if (this["_o_sourceBuffer_" + id] === undefined)
				throw CustomDOMException(DOMException.SYNTAX_ERR);
	
			// 3. If data is null then throw an INVALID_ACCESS_ERR exception.
			if (data === null)
				throw CustomDOMException(DOMException.INVALID_ACCESS_ERR);
	
			// 4. If the sourceState attribute is not in the SOURCE_OPEN state then throw an
			//	  INVALID_STATE_ERR exception.
			if (this.sourceState !== this.SOURCE_OPEN)
				throw CustomDOMException(DOMException.INVALID_STATE_ERR);
	
			// 5. If data.byteLength is 0 abort these steps.
			if (data.byteLength === 0)
				return;
	
			// 6. Copy contents of data into the source buffer associated with id.
			// 7. Handle end of segment cases.
			if (this._o_timestampOffset)
			{
				// [Apply globally active timestampOffset to buffer prior to append.]
				this["_o_sourceBuffer_" + id].timestampOffset = this._o_timestampOffset;
			};
			this["_o_sourceBuffer_" + id].append(data);
		};
	
		HTMLMediaElement.prototype.sourceAbort = function(id) {
			this._o_ensureMediaSource();
	
			// 1. If id is null or an empty string, then throw an INVALID_ACCESS_ERR exception.
			if (id === null || id === "")
				throw CustomDOMException(DOMException.INVALID_ACCESS_ERR);
	
			// 2. If id specifies an ID that has not been previously added then throw a
			//	  SYNTAX_ERR exception.
			if (this["_o_sourceBuffer_" + id] === undefined)
				throw CustomDOMException(DOMException.SYNTAX_ERR);
	
			// 3. If the sourceState attribute is not in the SOURCE_OPEN state then throw an
			//	  INVALID_STATE_ERR exception.
			if (this.sourceState !== this.SOURCE_OPEN)
				throw CustomDOMException(DOMException.INVALID_STATE_ERR);
	
			// 4. The media element aborts parsing the current segment.
			// 5. The media element resets the segment parser so that it ctan accept a new
			//	  initialization segment.
			this["_o_sourceBuffer_" + id].abort();
		};
	
		HTMLMediaElement.prototype.sourceEndOfStream = function(status) {
			this._o_ensureMediaSource();
	
			// 1. If the sourceState attribute is not in the SOURCE_OPEN state then throw an
			//	  INVALID_STATE_ERR exception.
			if (this.sourceState !== this.SOURCE_OPEN)
				throw CustomDOMException(DOMException.INVALID_STATE_ERR);
	
			// 2. Change the sourceState attribute value to SOURCE_ENDED.
			var statusString = "";
			switch (status) {
			case this.EOS_NO_ERROR:
				break;
			case this.EOS_NETWORK_ERR:
				statusString = "network";
				break;
			case this.EOS_DECODE_ERR:
				statusString = "decode";
				break;
			default:
				throw CustomDOMException(DOMException.INVALID_ACCESS_ERR);
			};
			this._o_mediaSource.endOfStream(statusString);
		};
	
		/* This is not part of MSE, but an extension YT desires. */
		HTMLMediaElement.prototype.sourceTimestampOffset = function(offset) {
			this._o_timestampOffset = offset;
		};
	
		/* Stolen from Marcosc, and slightly vandalized. */
		function CustomDOMException(code, message) {
			// we need the codes, to get the "name" property.
			var consts = {
				9: "NOT_SUPPORTED_ERR",
				11: "INVALID_STATE_ERR",
				12: "SYNTAX_ERR",
				15: "INVALID_ACCESS_ERR",
			};
	
			// props for adding properties
			var props = {};
			// generate an exception object
			var newException;
			try {
				//force an exception to be generated;
				document.removeChild({})
			} catch (e) {
				//use it as the prototype
				newException = Object.create(Object.getPrototypeOf(e));
			};
			// get the name of the exception type
			var name = consts[code];
	
			// add the properties
			var props = {value: null, writable: true, enumerable: false, configurable: true};
			//name
			props.value = name;
			Object.defineProperty(newException, "name",	   props);
			props.value = code;
			Object.defineProperty(newException, "code",	   props);
			props.value = message;
			Object.defineProperty(newException, "message", props);
	
			// Make sure it "stringifies" properly
			var finalMessage;
			var obj = this;
			if (typeof message === "function") {
				finalMessage = function() {
					return message.call(newException)
				}
			} else {
				finalMessage = function() {
					return "DOMException: " + name;
				}
			}
			props.value = function() {
				return finalMessage.call(newException)
			}
	
			Object.defineProperty(newException, "toString", props);
			return newException;
		};

	opera.defineMagicVariable('HTMLArea', null, function(obj){
		obj.__defineGetter__('is_gecko', function(){return true});
		obj.__defineSetter__('is_gecko', function(){});
		obj.__defineGetter__('checkSupportedBrowser', function(){return function(){return true;}});
		obj.__defineSetter__('checkSupportedBrowser', function(){});
		var onloadmethod;
		obj.__defineSetter__('onload', function(func){ onloadmethod=func;});
		obj.__defineGetter__('onload', function(){ return function(){ try{ onloadmethod.call(this);}catch(e){ var instance=this; setTimeout(function(){instance.onload();}, 150); }}});
		log('PATCH-298, HTMLArea fix');
		return obj;
	});
	

	opera.addEventListener('BeforeExternalScript',function(ev){
		var name=ev.element.src; 
		if(!name){return;}
		if(name.indexOf('api.e-map.ne.jp/jsapi.cgi?')!=-1){
			log('PATCH-115, Zenrin Datacom E-Map API fix applied');
			if (!Event.prototype.__lookupGetter__('layerX')&&!Event.prototype.__lookupGetter__('layerY')) {
				Event.prototype.__defineGetter__('layerX',function(){ return this.offsetX; });
				Event.prototype.__defineGetter__('layerY',function(){ return this.offsetY; });
			}
			ev.element.src += '&force=1';
		}else if((name.indexOf('expapi/authentication')!=-1)||(name.indexOf('expapi/expmapinclude')!=-1)||(name.indexOf('rosen/authentication')!=-1)){
			log('PATCH-122, Rosenzu ASP Map Service map fix applied');
			opera.defineMagicFunction('_ch',function(){return true;});
		}else if((name.indexOf('expapi/suggest')!=-1)||(name.indexOf('rosen/suggest')!=-1)){
			log('PATCH-122, Rosenzu ASP Map Service suggestions fix applied');
			opera.defineMagicFunction('checkBrowser',function(){return true;});
		}else if(name.indexOf('http://ebook.webcatalog.jp/engine/java/7net/common/sCommonLib.js')!=-1){ 
			log('PATCH-125, Netfly TrueEBook fix applied');
			opera.defineMagicFunction('funcGetBrowser',function(){return 2;}); 
		}else if(name.indexOf('_zap/')!=-1 && name.indexOf('source/js/script.js')!=-1){ 
			log('PATCH-471, ZAPPALLAS Fortune _zap fix applied');
			opera.defineMagicFunction('checkNavigator',function(){return true;}); 
		}else if(name.indexOf('shop/js/futureshop2.js')!=-1){
			log('PATCH-994, add future-shop CMS gradients');
			var cssText = '.FS2_InCartButton_D,.FS2_Search_btn_D,.FS2_SystemNav_btnPC,.FS2_sort_menu_title' + 
			'{background:-o-linear-gradient(top,#555,#000);}' + 
			'.FS2_Sort_btn {background:-o-linear-gradient(top,#FFF,#AAA);}' +
			'.FS2_Button_P {background:-o-linear-gradient(top,#444,#000);}' +
			'.FS2_Button_N {background:-o-linear-gradient(top,#EEE,#BBB);}'
			addCssToDocument(cssText);
		}
	},false);


	if((hostname.indexOf('tokyo.jp')>-1)||(hostname.indexOf('lg.jp')>-1)){
		if (location.pathname.indexOf('citymap')>-1) {
			window.opera.defineMagicFunction('chkBrowser',function(){
				return true;
			},false);
		}
		log('PATCH-186, tokyo.jp, lg.jp enable maps');
	} else if(hostname.contains('sheet.zoho.com')){
		MouseEvent.prototype.axis=2;
		log('PATCH-766, Make mouse scrolling work in Zoho spreadsheets');
	} else if(hostname.endsWith('caisse-epargne.fr')){
		addPreprocessHandler(/this\._changeHandler\);if\s*\(Sys\.Browser\.agent\s==\sSys\.Browser\.Opera\)/g, ' this._changeHandler);if(false)');
		log('PATCH-798, Avoid browser sniffing that breaks typing');
	} else if(hostname.endsWith('cfe.urssaf.fr')){
		opera.defineMagicFunction('navigateurAutorise',function(){return true});
		log('PATCH-807, urssaf.fr: block browser block');
	} else if(hostname.endsWith('facebook.com')){
		/* Facebook */
		log('0, Facebook');
	} else if(hostname.endsWith('mail.live.com')){
		function fixButton(e) {
			if (e.button == 1) {
				e.__defineGetter__('button', function() { return 0 });
			}
		};
		window.addEventListener('mousedown', fixButton, true);
		window.addEventListener('mousemove', fixButton, true);
		window.addEventListener('mouseup', fixButton, true);
		window.addEventListener('click', fixButton, true);
	
		addCssToDocument('.c_is { display: inline-block }');
	
		var styleSetterLookupMethod = document.createElement('span').style.__lookupSetter__;
		 CSSStyleDeclaration.prototype.__lookupSetter__ = function(prop){
			return styleSetterLookupMethod.call(document.createElement('span').style, prop);
		 };
		log('CORE-17444, Fix drag and drop in Hotmail\nCORE-17447, Mispositioned sprites due to missing CSS\nDSK-235885, Hotmail uses lookupGetter on prototypes, not instances');
	} else if(hostname.indexOf('.aol.') >-1){
		/* AOL */
		log('0, AOL');
	} else if(hostname.indexOf('.ebay.')>-1 || hostname.indexOf('.ebaydesc.')>-1){
		/* eBay issues */
	
	
		if(hostname.indexOf('.ebay.')>-1){
			opera.addEventListener('BeforeEvent.keydown', function(e) { 
				if (e.event.shiftKey && ( e.event.keyCode>36 && e.event.keyCode<41 ) ) 
					e.preventDefault(); 
			}, false); 
			
		
			if(hostname.indexOf('signin.ebay.')>-1){
			 addCssToDocument('#but_sgnBt, #but_register_signin{margin-left:0;padding-left: 8px;}');
			}
			log('PATCH-550, eBay: make spatnav in menu work\nPATCH-565, ebay: make sign in buttons accessible with spatnav');
		}
		log('0, eBay');
	} else if(hostname.indexOf('.google.')>-1){
		/* Google */
	
	
		// PATCH-343, Disable Google Search suggestions
	
		if (hostname.indexOf('www.google.')>-1) {
			if ((location.pathname=='/' || location.pathname=='/webhp') && location.search.indexOf('complete=0')<0) {
				location = '/webhp'+(location.search.length?location.search+'&':'?')+'complete=0';
			} else if (location.pathname.indexOf('/search')==0 && location.search.indexOf('complete=0')<0) {
				location = location.href+(location.search.length?'&':'?')+'complete=0';
			}
		}
	
	
		if(hostname.indexOf('code.google.')>-1 && (pathname.indexOf('diff')>-1 || pathname.indexOf('detail')>-1 )){
			addCssToDocument('div.diff>pre>table{white-space: normal;}div.diff>pre>table th, div.diff>pre>table td{white-space: pre-wrap;}');
			log('PATCH-321, Work around pre inheritance into tables on Google Code');
		}
		if(hostname.indexOf('mail.google.')>-1){
			addCssToDocument('div.wl{overflow:inherit}body{position:static !important}');
		
			addCssToDocument('.editable.LW-avf{font-size: small !important}');
			log('PATCH-566, GMail: override overflow and fixed position styles to improve scrolling performance\nPATCH-582, GMail: override workaround for old font-size bug in Opera');
		}
		log('0, Google');
	} else if(hostname.indexOf('.in.gr')>-1){
		document.addEventListener('DOMContentLoaded', function(){
		 elm = document.getElementById('ticker-area');
		 if(elm){
		  elm.innerHTML=elm.innerHTML.replace(/&nbsp;/,'');
		 }
		},false);
		log('PATCH-367, Correct placement of marquee on in.gr');
	} else if(hostname.indexOf('.sytadin.')!=-1){
		fixIFrameSSIscriptII('resizeIframeOnContent');
		log('OTW-5415, Sytadin.fr IFRAME resize script detects Opera');
	} else if(hostname.indexOf('.t-online.de')>-1){
		if(hostname.indexOf('email.')>-1){
		HTMLFormElement.prototype.submit=(function(s){
			return function(){ 
				var doc = this.target=='' ? this.ownerDocument : this.ownerDocument.getElementsByName(this.target)[0];
				if( doc ){
					doc.__defineGetter__('readyState', function(){return 'loading'});
				}
				return s.apply(this,arguments);
			}
		})(HTMLFormElement.prototype.submit)
		}
	
		if(hostname.indexOf('email.')>-1){
		document.addEventListener('load', function(e){
			if( e.target instanceof HTMLIFrameElement ){
				e.target.contentDocument.body.__defineGetter__('scrollHeight', function(){
					return this.ownerDocument.documentElement.offsetHeight; });
			}
		}, true);	
		}
		log('PATCH-458, Indicate loading state while a form submit is in progress, fixes attachment upload on T-Online\nPATCH-474, Avoid compose IFRAME resize (body.scrollHeight should be document\'s height)');
	} else if(hostname.indexOf('.tv.com')>-1){
		opera.addEventListener('BeforeCSS', function(e){
		  e.cssText = e.cssText.replace(/br{content:"&nbsp;";/g,'br{ ');
		}, false);
		log('PATCH-720, tv.com: workaround misuse of CSS generated content');
	} else if(hostname.indexOf('.yahoo.')>-1){
		/* Yahoo! */
	
	
		if(hostname.indexOf('.mail.yahoo.')>-1){
			if(self==top&&location.search.indexOf('reason=ignore')==-1){
				document.addEventListener('DOMContentLoaded',function(){
					if(el=document.querySelector('a[href*="reason=ignore"]')){
						el.click();
					}else if(document.evaluate('//a[contains(@href,"/firefox")]', document.body, null, 6, null).snapshotLength && document.evaluate('//a[contains(@href,"/internetexplorer/")]', document.body, null, 6, null).snapshotLength && document.evaluate('//a[contains(@href,"/safari/")]', document.body, null, 6, null).snapshotLength){
						location.search='?reason=ignore'+location.search.replace(/^\?/, '&');
					}
				},false);
			}
			log('PATCH-325, Y!Mail: click continue link in unsupported browser page');
		}
		if(hostname.indexOf('.mail.yahoo.')>-1&& ( href.indexOf( '/neo/launch' )>-1 || href.indexOf( '/dc/launch' )>-1 )){
			opera.addEventListener('BeforeEventListener.mousedown', function(e){
				if(e.event.target.tagName=='INPUT' && e.event.target.id=='subject-field'){
					e.preventDefault();
				}
			},false);
			
		
			document.addEventListener('load', function(e){
				if(e.target && e.target.tagName=='IFRAME'){
					var ifrWin, gCS;
					try{ifrWin=e.target.contentWindow.location&&e.target.contentWindow.document.URL&&e.target.contentWindow;}catch(e){}
					if(ifrWin){
						gCS=ifrWin.getComputedStyle;
						ifrWin.getComputedStyle=function(el, str){
							var cssobj=gCS.apply(this,arguments);
							if( el.tagName=='FONT' && el.getAttribute('face') )cssobj.__defineGetter__( 'fontFamily', function(){return el.getAttribute('face');} );
							return cssobj;
						}
					}
				}
			}, true);
			
			log('PATCH-417, Y!Mail Allow focusing subject field by mouse click in\nPATCH-418, Y!Mail Fix inserting links in mail compose screen');
		}
		if(hostname.indexOf('.mail.yahoo.')>=0 && pathname.indexOf('/mc/')==0){
			avoidDocumentWriteAbuse();
			log('PATCH-359, Y!Mail Avoid overwriting classic inbox');
		}
		if(hostname.indexOf('finance.yahoo.')>-1){
			navigator.userAgent = 'Mozilla/5.0 (Windows NT 5.1; rv:6.0) Gecko/20100101 Firefox/6.0'; 
			log('PATCH-297, Fool browser sniffing that prevents stock ticker on Yahoo Finance');
		}
		if(hostname.indexOf('finance.yahoo.com')>-1){
			opera.addEventListener('BeforeEventListener.focusout', function(e){e.preventDefault();}, false);
			log('PATCH-406, Prevent currency menu from closing too fast on Y!Finance');
		}
		log('0, Yahoo!');
	} else if(hostname.indexOf('athome.co.jp') > -1){
		opera.defineMagicFunction('checkTargetBrowser',function(){});
		opera.defineMagicFunction('checkTargetCookie',function(){});
		log('PATCH-147, athome.co.jp Hide warning messages because of Browser UA');
	} else if(hostname.indexOf('baidu.com')>-1){
		navigator.userAgent = "Opera/9.80 (X11; Linux i686; U; en) Presto/2.7.61 Version/11.00";
		log('ITVSDK-5495, map.baidu.com - fix drag issue');
	} else if(hostname.indexOf('cambrian.mb.ca')>-1){
		HTMLTableElement.prototype.__defineGetter__('all', function(){});
		HTMLTableCellElement.prototype.__defineGetter__('all', function(){});
		HTMLDivElement.prototype.__defineGetter__('all', function(){});
		
		log('PATCH-285, Enable log-in button on Cambrian bank');
	} else if(hostname.indexOf('computerra.ru')>-1){
		document.addEventListener('DOMContentLoaded', function(){
			if(window.jsUtils&&window.jsUtils.bOpera)jsUtils.bOpera=false;
		}, false);
		log('PATCH-267, Make BBCode editor buttons work by disabling Opera sniffing');
	} else if(hostname.indexOf('cs.kddi.com')>-1){
		HTMLInputElement.prototype.__defineSetter__('disabled', function(){});
		log('PATCH-656, Fix disabled buttons on KDDI Customer Support page');
	} else if(hostname.indexOf('directv.com')>-1){
		opera.defineMagicFunction('printContingencyWarningMessage',function(){});
		log('PATCH-721, directv.com: suppress old browser message');
	} else if(hostname.indexOf('forever21.co.jp') > -1){
		if (pathname.indexOf('QuickView.aspx')>-1) {
			addCssToDocument('html{background:#fff}');
		}
		log('PATCH-617, missing QuickView background color on Forever21.co.jp');
	} else if(hostname.indexOf('geoaccess.com')!=-1){
		opera.defineMagicVariable('is_nav', function(){return true;}, null);
		
		log('318050,  BlueCross browser sniffing prevents insurance search');
	} else if(hostname.indexOf('infinitiusa.com')>-1 || hostname.indexOf('nissanusa.com')>-1){
		opera.addEventListener('BeforeScript', function(e){
			if (e.element.src.indexOf('codepack.incGlobPaths.true.content.js')>-1){
				e.element.text = e.element.text.replace(/function\(un\){s\.un=un;/,"function(un){var s=this;s.un=un;");
			}
		}, false);
		log('PATCH-529, Fix SiteCatalyst H.9 code on Nissan/Infiniti USA');
	} else if(hostname.indexOf('kort.arealinfo.dk')>-1){
		opera.defineMagicVariable('op', function(){return false}, null);
		log('PATCH-348, Disable Opera detection that causes hidden content');
	} else if(hostname.indexOf('officeapps.live.com')>-1){
		/* Microsoft Office Web Apps */
		log('0, Microsoft Office Web Apps');
	} else if(hostname.indexOf('opera.com')>-1&& pathname.indexOf('/docs/browserjs/')==0){
		document.addEventListener((parseFloat(opera.version())>9?'DOMContentLoaded':'load'),function(){
			if(document.getElementById('browserjs_active')){
				document.getElementById('browserjs_active').style.display='';
				document.getElementById('browserjs_active').getElementsByTagName('span')[0].appendChild(document.createTextNode(bjsversion));
				document.getElementById('browserjs_status_message').style.display='none';
			}else if(document.getElementById('browserjs_status_message')){
				document.getElementById('browserjs_status_message').firstChild.data='Browser.js is enabled! '+bjsversion;
			}
		}, false);
		log('0, Browser.js status and version reported on browser.js documentation page');
	} else if(hostname.indexOf('pluginfree.com') > -1){
		opera.defineMagicFunction('sort',function(rf,rt){
			var res;
			return (res=rf.apply(rt,slice.call(arguments, 2)))?res:"nn";
		},false);
		
		log('PATCH-105, DNP Pluginfree Viewer fallback to Netscape version for Opera');
	} else if(hostname.indexOf('rede-expressos.pt')>-1 ){
		addCssToDocument('#fraHorarioIN, #fraBil1IN{min-height: 250px !important}');
		
			
		log('PATCH-422, Miscalculated IFRAME height prevents booking on rede-expressos');
	} else if(hostname.indexOf('skydrive.live.com')>-1){
		addCssToDocument('span.et_main{padding-left:0 !important}');
		log('PATCH-571, live.com: make file names visible');
	} else if(hostname.indexOf('sslsecure.maybank.com')>-1){
		opera.defineMagicFunction('MM_checkBrowser', function(){});
		log('PATCH-415, Browser sniffing causes 404 page on login to Maybank');
	} else if(hostname.indexOf('t.qq.com')>-1){
		opera.addEventListener('BeforeScript', function(e){
			if(e.element.src && e.element.src.indexOf('mi.Tmpl')>-1 && typeof _ === 'function'){
				e.element.text = e.element.text.replace(/'\+_\("([^"]*)"\)\+'/g, function(){return _(arguments[1]) });
			}
		}, false);
		log('PATCH-538, Pre-process script to avoid "too deeply nested input" error, internal limits in Opera\'s ES engine too low');
	} else if(hostname.indexOf('tvguide.com')>-1){
		opera.defineMagicVariable('isSafari', function(){return true;}, null);
		log('PATCH-274, TVGuide doesn\'t show program descriptions, due to browser sniffing');
	} else if(hostname.indexOf('virginamerica.com')>-1){
		navigator.appName='Netscape';
		opera.defineMagicVariable('browserType',function(){return 'gecko'},null);
		log('PATCH-492, virginamerica.com - Fix browser sniffing');
	} else if(hostname.indexOf('webprint.post.japanpost.jp')>-1){
		opera.defineMagicFunction('_supportsDOM',function (oReal,oThis) { return true; });
		log('PATCH-449, japanpost.jp: Fix broken _supportsDOM function');
	} else if(hostname.indexOf('westjet.com')>-1 ){
		opera.defineMagicVariable('browser', function(o){ o.isSupported=true; return o; }, null);
		log('PATCH-260,  Westjet browser sniffing warns against Opera');
	} else if(hostname.indexOf('xcweather.co.uk')>-1){
		opera.defineMagicFunction('populateForm',
			function(real,oThis,oForm){
				var args=arguments;
				if(!oForm){
					setTimeout(function(){real.apply(oThis, Array.prototype.slice.call(args, 2));},100);
				}else{
					return real.apply(oThis, Array.prototype.slice.call(arguments, 2));
				}
			}
		);
		log('PATCH-519, xcweather: make sure the preference form is available when running script');
	} else if(href.indexOf('/sample_lr.html')>-1){
		navigator.userAgent+=' Gecko';
		log('PATCH-128, Sun Webmail fails to set document.domain due to browser sniffing');
	} else if(pathname.indexOf('/zimbra/')>-1){
		opera.defineMagicVariable('AjxEnv', null, function(obj){
			obj.__defineGetter__('isGeckoBased', function(){return true;});
			obj.__defineSetter__('isGeckoBased', function(){});
			return obj;
		});
		
		log('PATCH-255, Work around browser sniffing that prevents Zimbra\'s rich text editor from loading');
	}

})(opera);
